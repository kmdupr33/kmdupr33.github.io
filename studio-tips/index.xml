<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Studio-tips on Philosophical Hacker</title>
    <link>https://www.philosophicalhacker.com/studio-tips/</link>
    <description>Recent content in Studio-tips on Philosophical Hacker</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://www.philosophicalhacker.com/studio-tips/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>https://www.philosophicalhacker.com/studio-tips/expression-selection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.philosophicalhacker.com/studio-tips/expression-selection/</guid>
      <description> (Syntactically) Extend Selection Many Android Studio refactorings require that your cursor has selected an expression (e.g., extract method). Sometimes selecting an expression can be tricky (e.g., when the expression inside of nested parentheses and/or closures). The extend selection action comes in handy big time here.
  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.philosophicalhacker.com/studio-tips/log-templates/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.philosophicalhacker.com/studio-tips/log-templates/</guid>
      <description> Logging Live Templates Sometimes its useful to log the parameters and/or return value of a method that you&amp;rsquo;re debugging. Android Studio has live templates that help you do just that.
  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.philosophicalhacker.com/studio-tips/postfix-templates/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.philosophicalhacker.com/studio-tips/postfix-templates/</guid>
      <description> Postfix Templates Sometimes you need a live template to be applied to a particular variable that you&amp;rsquo;re working with. This can be accomplished through the use of Postfix Templates. As the name suggests, these templates are invoked by appending a period to the variable you want to invoke a template on. After appending the period, invoke autocomplete to see the list of available postfix templates.
  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.philosophicalhacker.com/studio-tips/smart-completion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.philosophicalhacker.com/studio-tips/smart-completion/</guid>
      <description>Smart Completion You can invoke auto completion by pressing Ctrl + Space. This will display a list of possible ways to complete the line of code your typing by, for example, suggesting method calls or variable names. You can further refine the list of completion options displayed to you by using smart completion, which can be invoked by pressing Ctrl + Shift + Space.
I want to point out one really neat thing about the way in which the list is refined.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.philosophicalhacker.com/studio-tips/tab-vs-enter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.philosophicalhacker.com/studio-tips/tab-vs-enter/</guid>
      <description> Tab vs. Enter for autocomplete Enter can be used to select an item from an auto complete list. When enter is used, the selected item will simply be inserted into the text at the cursors current position. Pressing tab as a way of selecting an autocomplete list item, however, will replace the symbol currently underneath the cursor with the one that you&amp;rsquo;ve selected from the autocomplete list.
  </description>
    </item>
    
  </channel>
</rss>