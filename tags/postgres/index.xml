<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>postgres on Philosophical Hacker</title>
    <link>/tags/postgres/</link>
    <description>Recent content in postgres on Philosophical Hacker</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 28 Dec 2021 21:11:32 -0500</lastBuildDate>
    
        <atom:link href="https://www.philosophicalhacker.com/tags/postgres/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Optimizing Postgres Queries at Scale</title>
      <link>https://www.philosophicalhacker.com/post/optimizing-postgres-queries-at-scale/</link>
      <pubDate>Tue, 28 Dec 2021 21:11:32 -0500</pubDate>
      
      <guid>https://www.philosophicalhacker.com/post/optimizing-postgres-queries-at-scale/</guid>
      <description>Note: This post was originally published on heap&amp;rsquo;s blog
 Heap is a product analytics tool that automatically captures web and mobile behavior like page views, clicks, and taps. We&amp;rsquo;re operating at a scale of billions of events per day, which we store across a distributed Postgres cluster.
Heap&amp;rsquo;s thousands of customers can build queries in the Heap UI to answer almost any question about how users are using their product.</description>
      
    </item>
    
    <item>
      <title>How Postgres Audit Tables Saved Us From Taking Down Production</title>
      <link>https://www.philosophicalhacker.com/post/audit-tables/</link>
      <pubDate>Mon, 08 Nov 2021 19:50:46 -0500</pubDate>
      
      <guid>https://www.philosophicalhacker.com/post/audit-tables/</guid>
      <description>Note: This post was originally published on heap&amp;rsquo;s blog
 Audit tables record changes that occur to rows in another table. They’re like commit logs for database tables, and they&amp;rsquo;re typically used to figure out who made what changes when. But surprisingly, we&amp;rsquo;ve found them useful for keeping our distributed Postgres cluster stable.
To convince you of the stability-related value of audit tables, we&amp;rsquo;ll cover how audit tables helped us avoid a serious incident.</description>
      
    </item>
    
    <item>
      <title>Lessons from Deploying 1 million Postgres Indexes</title>
      <link>https://www.philosophicalhacker.com/post/million-indexes/</link>
      <pubDate>Wed, 13 Oct 2021 18:51:40 -0400</pubDate>
      
      <guid>https://www.philosophicalhacker.com/post/million-indexes/</guid>
      <description>Note: This post was originally published on heap&amp;rsquo;s blog
 Heap is a product analytics tool that automatically captures web and mobile behavior like page views, clicks, and taps. We&amp;rsquo;re operating at a scale of billions of events per day, which we store across a distributed Postgres cluster. Our cluster has over a million tables of events.
Recently, we discovered an index that makes our new Effort Analysis feature faster, and we attempted to roll out that index across the cluster.</description>
      
    </item>
    
    <item>
      <title>Working Around a Case Where the Postgres Planner Is &#34;Not Very Smart&#34;</title>
      <link>https://www.philosophicalhacker.com/post/postgres-planner-not-smart/</link>
      <pubDate>Tue, 10 Aug 2021 20:21:35 -0400</pubDate>
      
      <guid>https://www.philosophicalhacker.com/post/postgres-planner-not-smart/</guid>
      <description>Note: This post was originally published on heap&amp;rsquo;s blog
 Heap is a digital insights platform that automatically captures web and mobile behavior like page views, clicks, and taps. We recently shipped Effort Analysis, a way for Heap customers to see the median number of interactions and seconds engaged between each step within a funnel. Here’s what it looks like:
To build this feature, we needed to write a query that could quickly scan more than a billion rows of event data.</description>
      
    </item>
    
  </channel>
</rss>
