<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TDD on Philosophical Hacker</title>
    <link>/tags/TDD/</link>
    <description>Recent content in TDD on Philosophical Hacker</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 16 Oct 2016 22:38:44 -0400</lastBuildDate>
    
        <atom:link href="https://www.philosophicalhacker.com/tags/TDD/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>3 Ways of &#39;Getting to Green&#39;</title>
      <link>https://www.philosophicalhacker.com/post/3-ways-of-getting-to-green/</link>
      <pubDate>Sun, 16 Oct 2016 22:38:44 -0400</pubDate>
      
      <guid>https://www.philosophicalhacker.com/post/3-ways-of-getting-to-green/</guid>
      <description>A part of the TDD work flow is getting a failing test to pass as quickly as possible. This makes sense if we think about how TDD is supposed to help us take smaller steps when we&amp;rsquo;re writing programs. Beck goes over three ways of getting a test to pass quickly in the fist part of TDD By Example.
The first method is to fake it. Just hard code whatever values you need to to get the tests to pass.</description>
    </item>
    
    <item>
      <title>The goal of refactoring During TDD</title>
      <link>https://www.philosophicalhacker.com/post/the-goal-of-refactoring-during-tdd/</link>
      <pubDate>Sun, 16 Oct 2016 16:35:28 -0400</pubDate>
      
      <guid>https://www.philosophicalhacker.com/post/the-goal-of-refactoring-during-tdd/</guid>
      <description>Red, green, refactor. That&amp;rsquo;s the TDD flow. That much was obvious to me.
However, refactoring is a pretty broad term. There are many reasons you may want to refactor code and as a result of this, I didn&amp;rsquo;t really understand what exactly was supposed to happen during the refactor step of the TDD loop until I finished the first part of Kent Beck&amp;rsquo;s TDD by Example.
Actually, in the first description of TDD, Beck uses a more helpful description of the &amp;ldquo;refactor step.</description>
    </item>
    
  </channel>
</rss>