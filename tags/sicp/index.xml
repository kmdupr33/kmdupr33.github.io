<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sicp on Philosophical Hacker</title>
    <link>https://www.philosophicalhacker.com/tags/sicp/</link>
    <description>Recent content in sicp on Philosophical Hacker</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 29 Mar 2016 18:02:27 -0400</lastBuildDate>
    
	<atom:link href="https://www.philosophicalhacker.com/tags/sicp/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Sicp 1.1.1-1.1.7</title>
      <link>https://www.philosophicalhacker.com/post/sicp-111-117/</link>
      <pubDate>Tue, 29 Mar 2016 18:02:27 -0400</pubDate>
      
      <guid>https://www.philosophicalhacker.com/post/sicp-111-117/</guid>
      <description>Today was my first work day at the Recurse Center. Yesterday, I found out that there&amp;rsquo;s an SICP study group. I&amp;rsquo;ve been wanting to study SICP for a while now, so naturally I joined. What follows are my thoughts and key take-aways from sections 1.1.1-1.1.7.
Declarative vs. Procedural Knowledge Abelson et al. open the book with a really interesting distinction between declarative and procedural knowledge. Moreover, they suggest that the most significant achievement of computer science is that it provides a way for us to study procedural knowledge.</description>
    </item>
    
  </channel>
</rss>