<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kotlin on Philosophical Hacker</title>
    <link>https://www.philosophicalhacker.com/tags/kotlin/</link>
    <description>Recent content in kotlin on Philosophical Hacker</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 01 Sep 2019 08:50:00 -0400</lastBuildDate>
    
	<atom:link href="https://www.philosophicalhacker.com/tags/kotlin/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>An Intro to Gradient Descent for Kotlin Programmers</title>
      <link>https://www.philosophicalhacker.com/post/gradient-descent-for-kotlin-programmers/</link>
      <pubDate>Sun, 01 Sep 2019 08:50:00 -0400</pubDate>
      
      <guid>https://www.philosophicalhacker.com/post/gradient-descent-for-kotlin-programmers/</guid>
      <description>Introduction Gradient descent is an algorithm that&amp;rsquo;s used to solve supervised learning and deep learning problems. Here I&amp;rsquo;m going to try to give you an idea of why the algorithm works and how you&amp;rsquo;d implement it in Kotlin. I&amp;rsquo;ll also show the algorithm working with a simple kaggle dataset involving video game sales and ratings.
Everything I cover here is covered in Andrew Ng&amp;rsquo;s excellent Coursera machine learning course with the exception of the Kotlin implementation of gradient descent.</description>
    </item>
    
    <item>
      <title>How to Abuse Kotlin Extension Functions</title>
      <link>https://www.philosophicalhacker.com/post/how-to-abuse-kotlin-extension-functions/</link>
      <pubDate>Fri, 26 May 2017 18:48:58 -0400</pubDate>
      
      <guid>https://www.philosophicalhacker.com/post/how-to-abuse-kotlin-extension-functions/</guid>
      <description>I&amp;rsquo;ve got a &amp;ldquo;sweet tooth,&amp;rdquo; which, in my case, is just a euphemism for me saying that I&amp;rsquo;m addicted to sugar. I&amp;rsquo;m young now, but I know that this addiction won&amp;rsquo;t end well once my metabolism slows down, so I try go to the gym.
Unfortunately, when I leave the gym, I often think to myself, &amp;ldquo;I just worked out, so I can snag that Oreo McFlurry I&amp;rsquo;ve been craving all day.</description>
    </item>
    
    <item>
      <title>Why Im Skeptical about Kotlin Coroutines for Android Development</title>
      <link>https://www.philosophicalhacker.com/post/why-im-skeptical-about-kotlin-coroutines-for-android-development/</link>
      <pubDate>Sun, 19 Mar 2017 00:34:58 -0400</pubDate>
      
      <guid>https://www.philosophicalhacker.com/post/why-im-skeptical-about-kotlin-coroutines-for-android-development/</guid>
      <description>A few weeks ago, the folks working on Kotlin announced the 1.1 release. Kotlin&amp;rsquo;s 1.1 release has experiment support for coroutines. Here&amp;rsquo;s the elevator pitch for coroutines from their blog post announcing the release:
 Asynchronous programming is taking over the world, and the only thing that is holding us back is that non-blocking code adds considerable complexity to our systems. Kotlin now offers means to tame this complexity by making coroutines first-class citizens in the language through the single primitive: suspending functions.</description>
    </item>
    
  </channel>
</rss>