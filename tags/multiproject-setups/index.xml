<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>multiproject setups on Philosophical Hacker</title>
    <link>/tags/multiproject-setups/</link>
    <description>Recent content in multiproject setups on Philosophical Hacker</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 03 Oct 2014 03:02:54 +0000</lastBuildDate>
    
        <atom:link href="https://www.philosophicalhacker.com/tags/multiproject-setups/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>An Alternative Multiproject Setup for Android Studio</title>
      <link>https://www.philosophicalhacker.com/2014/10/03/an-alternative-multiproject-setup-for-android-studio/</link>
      <pubDate>Fri, 03 Oct 2014 03:02:54 +0000</pubDate>
      
      <guid>https://www.philosophicalhacker.com/2014/10/03/an-alternative-multiproject-setup-for-android-studio/</guid>
      <description>Google&amp;rsquo;s Gradle Plugin user guide recommends a method for configuring your gradle files to build multiple projects. That method has some shortcomings. In this post, I will briefly explain Google&amp;rsquo;s recommended configuration, note its shortcomings, and recommend a different way to configure your gradle files to support multi-project setups in Android Studio.
The Google Way 
This picture illustrates how Google suggests we handle multi-project setups: our main &amp;ldquo;app&amp;rdquo; module is supposed to depend on library modules that reside within the project directory.</description>
    </item>
    
  </channel>
</rss>