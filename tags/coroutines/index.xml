<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>coroutines on Philosophical Hacker</title>
    <link>https://www.philosophicalhacker.com/tags/coroutines/</link>
    <description>Recent content in coroutines on Philosophical Hacker</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 19 Mar 2017 00:34:58 -0400</lastBuildDate>
    
	<atom:link href="https://www.philosophicalhacker.com/tags/coroutines/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Why Im Skeptical about Kotlin Coroutines for Android Development</title>
      <link>https://www.philosophicalhacker.com/post/why-im-skeptical-about-kotlin-coroutines-for-android-development/</link>
      <pubDate>Sun, 19 Mar 2017 00:34:58 -0400</pubDate>
      
      <guid>https://www.philosophicalhacker.com/post/why-im-skeptical-about-kotlin-coroutines-for-android-development/</guid>
      <description>A few weeks ago, the folks working on Kotlin announced the 1.1 release. Kotlin&amp;rsquo;s 1.1 release has experiment support for coroutines. Here&amp;rsquo;s the elevator pitch for coroutines from their blog post announcing the release:
 Asynchronous programming is taking over the world, and the only thing that is holding us back is that non-blocking code adds considerable complexity to our systems. Kotlin now offers means to tame this complexity by making coroutines first-class citizens in the language through the single primitive: suspending functions.</description>
    </item>
    
  </channel>
</rss>