<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>git on Philosophical Hacker</title>
    <link>/tags/git/</link>
    <description>Recent content in git on Philosophical Hacker</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 23 Oct 2016 17:27:45 -0400</lastBuildDate>
    
        <atom:link href="https://www.philosophicalhacker.com/tags/git/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Using Git Submodules Effectively</title>
      <link>https://www.philosophicalhacker.com/post/using-git-submodules-effectively/</link>
      <pubDate>Sun, 23 Oct 2016 17:27:45 -0400</pubDate>
      
      <guid>https://www.philosophicalhacker.com/post/using-git-submodules-effectively/</guid>
      <description>I used to think git submodules were categorically evil. This was naive, as most choices in software development are about tradeoffs. A part of the reason I had this simplistic view was because of an article called &amp;ldquo;Why your Company Shouldn&amp;rsquo;t use Git Submodules.&amp;rdquo; I took a second look at this article recently and I read the docs on git submodules. What follows are some more nuanced thoughts on how and when git submodules can be used effectively.</description>
      
    </item>
    
  </channel>
</rss>
