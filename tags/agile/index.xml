<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>agile on Philosophical Hacker</title>
    <link>/tags/agile/</link>
    <description>Recent content in agile on Philosophical Hacker</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 12 Feb 2021 18:25:50 -0500</lastBuildDate>
    
        <atom:link href="https://www.philosophicalhacker.com/tags/agile/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Exposing Imposter User Stories</title>
      <link>https://www.philosophicalhacker.com/post/user-story-suprise/</link>
      <pubDate>Fri, 12 Feb 2021 18:25:50 -0500</pubDate>
      
      <guid>https://www.philosophicalhacker.com/post/user-story-suprise/</guid>
      <description>The law of raspberry jam &amp;mdash; the more it spreads, the thinner it gets &amp;mdash; definitely applies to &amp;ldquo;agile software development.&amp;rdquo; &amp;ldquo;Agile&amp;rdquo; is ubiquitous and nearly meaningless at the same time. You don&amp;rsquo;t learn much about how a company actually operates from hearing that it&amp;rsquo;s &amp;ldquo;agile.&amp;rdquo;
This isn&amp;rsquo;t a new claim, and it shouldn&amp;rsquo;t be controversial. OG agile manifesto signatories and prominent programmers have pointed this out already:
 I was among the seventeen middle-aged white guys who gathered at Snowbird, Utah.</description>
      
    </item>
    
    <item>
      <title>Object Thinking&#39;s Intro</title>
      <link>https://www.philosophicalhacker.com/note/object-thinkings-intro/</link>
      <pubDate>Wed, 03 May 2017 08:57:08 -0400</pubDate>
      
      <guid>https://www.philosophicalhacker.com/note/object-thinkings-intro/</guid>
      <description>Object Thinking&amp;rsquo;s introduction begins with talking about the ongoing crisis in software:
 The time: 1968. A software crisis has been declared. Part of the crisis derives from the fact that more software is needed than there are developers to produce it. The other part of the crisis is the abysmal record of development efforts. More than half of the projects initiated are canceled, and less than 20 percent of projects are successfully completed&amp;hellip;</description>
      
    </item>
    
  </channel>
</rss>
