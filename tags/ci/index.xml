<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>ci on Philosophical Hacker</title>
    <link>/tags/ci/</link>
    <description>Recent content in ci on Philosophical Hacker</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 20 Mar 2021 19:02:02 -0400</lastBuildDate>
    
        <atom:link href="https://www.philosophicalhacker.com/tags/ci/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Building Better Code Review at Heap</title>
      <link>https://www.philosophicalhacker.com/post/building-better-code-review-at-heap/</link>
      <pubDate>Sat, 20 Mar 2021 19:02:02 -0400</pubDate>
      
      <guid>https://www.philosophicalhacker.com/post/building-better-code-review-at-heap/</guid>
      <description>Note: This post was originally published on heap&amp;rsquo;s blog
 Heap — like most companies — has a code review (CR) process. Until recently, that process often involved manually catching trivial issues in PRs (Pull Requests), which led to slow, inconsistent, and low-quality PR comments.
To address this, we adopted Prettier, Danger, some custom StyleLint rules, and a Buildkite step that automatically adds specific checklists to PRs depending on which files are changed in our monorepo.</description>
      
    </item>
    
    <item>
      <title>Setting up a Jenkins Pipeline for Android Testing</title>
      <link>https://www.philosophicalhacker.com/post/setting-up-a-jenkins-pipeline-for-android-testing/</link>
      <pubDate>Fri, 28 Apr 2017 17:39:22 -0400</pubDate>
      
      <guid>https://www.philosophicalhacker.com/post/setting-up-a-jenkins-pipeline-for-android-testing/</guid>
      <description>Some tests are fast. You can run 1000s of them in seconds. These are the tests that are the heart and soul of TDD, so you run them every chance you get.
There are other tests that aren&amp;rsquo;t so fast. Because they&amp;rsquo;re slow, you don&amp;rsquo;t want to run them often. You&amp;rsquo;ve got better things to do than to sit and wait for test results to come through.
Unfortunately, the less you run your slow tests, the less valuable they are.</description>
      
    </item>
    
  </channel>
</rss>
